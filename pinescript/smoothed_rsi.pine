// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© palitoj_endthen

//@version=5
indicator(title = 'Smoothed RSI with Trendline', shorttitle = 'smoothed_rsi', overlay = false)


// input
src = input.source(defval = ohlc4, title = 'Source', group = 'Options', tooltip = 'Determines the source of input data, default to ohlc4', inline = 'f')
trendline = input.bool(defval = true, title = 'Trendline', group = 'Options', tooltip = 'Determines whether to display trendline overlay to rsi', inline = 'f')
length = input.int(defval = 14, title = 'Lookback Period', group = 'Value', tooltip = 'Determines the length of the RSI lookback period')
left = input.int(defval = 20, title = 'Pivot Left', group = 'Value', tooltip = 'Determines length of the left pivot')
right = input.int(defval = 10, title = 'Pivot Right', group = 'Value', tooltip = 'Determines length of the right pivot')
overbought = input.int(defval = 70, title = 'Overbought Level', group = 'Value', tooltip = 'Determines the Overbought Level/Area, default to 70')
oversold = input.int(defval = 30, title = 'Oversold Level', group = 'Value', tooltip = 'Determines the Overbought Level/Area, default to 30')


// variable
var a1 = 0.00
var b1 = 0.00
var c1 = 0.00
var c2 = 0.00
var c3 = 0.00
var smoothed_rsi = 0.00


// relative strength index
rsi = ta.rsi(src, length)

// smoothed with super smoother
pi = 2*math.asin(1)
a1 := math.exp(-1.414*pi/10) 
b1 := 2*a1*math.cos(1.414*2*pi/10) 
c2 := b1
c3 := -a1*a1
c1 := 1-c2-c3
smoothed_rsi := c1*(rsi+rsi[1])/2+c2*nz(smoothed_rsi[1])+c3*nz(smoothed_rsi[2])


// visualize
hline(overbought, color = color.new(color.blue, 50), linestyle = hline.style_dashed)
hline(oversold, color = color.new(color.blue, 50), linestyle = hline.style_dashed)
plot(smoothed_rsi, color = color.maroon, linewidth = 3)


// trendline
float pivot_high = 0.00
float pivot_low = 0.00
pivot_high := ta.pivothigh(smoothed_rsi, left, right)
pivot_low := ta.pivotlow(smoothed_rsi, left, right)

for i = 0 to length-1
    var line_ = array.new_line(length)

    high_x = ta.valuewhen(pivot_high, bar_index, 1)-right
    high_y = ta.valuewhen(pivot_high, pivot_high, 1)
    low_x = ta.valuewhen(pivot_low, bar_index, 1)-right
    low_y = ta.valuewhen(pivot_low, pivot_low, 1)

    if high_y[i] < high_y[i+1]
        array.push(line_, line.new(x1 = high_x, y1 = high_y, x2 = high_x[i+1], y2 = high_y[i+1], color = trendline ? color.red : na))
    if low_y[i] > low_y[i+1]
        array.push(line_, line.new(x1 = low_x, y1 = low_y, x2 = low_x[i+1], y2 = low_y[i+1], color = trendline ? color.green : na))
