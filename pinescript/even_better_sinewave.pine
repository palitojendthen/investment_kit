// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© palitoj_endthen

//@version=5
indicator(title = 'John F. Ehlers - Even Better Sinewave Modified', shorttitle = 'even_better_sinewave', overlay = false)


// input
src = input.source(defval = ohlc4, title = 'Source', group = 'Options', tooltip = 'Determines the source of input data, default to ohlc4', inline = 'f')
apply_bar_color = input.bool(defval = false, title = 'Bar color', group = 'Options', tooltip = 'Determines whether to apply bar color', inline = 'f')
hp_period = input.int(defval = 89, title = 'High-Pass Period', group = 'Lookback Period', tooltip = 'Determines the length of the High-Pass period')

// variable
alpha1 = 0.00
hp = 0.00
filt = 0.00
wave = 0.00
pwr = 0.00
con = 0

// even better sinewave
// highpass filter cyclic components whose periods are shorter than 48 bars
pi = 2*math.asin(1)
alpha1 := (math.cos(.707*2*pi/hp_period) + math.sin(.707*2*pi/hp_period)-1)/math.cos(.707*2*pi/hp_period)
hp := (1-alpha1/2)*(1-alpha1/2)*(src-2*src[1]+src[2])+2*(1-alpha1)*nz(hp[1])-(1-alpha1)*(1-alpha1)*nz(hp[2])

// smoothed (modified)
filt := (7*hp+6*hp[1]+5*hp[2]+4*hp[3]+3*hp[4]+2*hp[5]+hp[6])/28

// 3 bar average of wave amplitude and power
wave := (filt+filt[1]+filt[2])/3
pwr := (filt*filt+filt[1]*filt[1]+filt[2]*filt[2])/3

// normalize
wave := wave/math.sqrt(pwr)


// Visualize
// color condition
if wave < -.8
    con := con
else if wave > wave[1]
    con := 1
else if wave > .8
    con := 1
else if wave < wave[1]
    con := con

color_con = con == 1 ? color.green : color.red

// plot
p1 = plot(wave, color = color_con, linewidth = 3)
plot(wave[1]*.9, color = color.new(color.aqua, 80))

// bar color
barcolor(apply_bar_color ? color_con : na)


// create alert
alertcondition(con == 1 , title = 'Entry', message = 'Buy/Long entry point detected')
alertcondition(con == 0, title = 'Close', message = 'Sell/Short entry point detected')


// // strategy test
// percent_sl = input.float(defval = 3, title = 'Stop Loss', group = 'Value', tooltip = 'Determines the stop-loss percentage')
// long_condition = con == 1
// short_condition = con == 0

// long_sl = 0.00
// long_sl := long_condition ? close*(1-percent_sl/100) : nz(long_sl[1])

// if long_condition
//     strategy.entry(id = 'long', direction = strategy.long)
// if not long_condition
//     strategy.exit(id = 'exit-long', from_entry = 'long', stop = long_sl)
