// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© palitoj_endthen

//@version=5
indicator(title = 'John F. Ehlers - Modified Stochastic', shorttitle = 'stochastic_cycle', overlay = false)


// input
length = input.int(defval = 20, title = 'Length', group = 'Value', tooltip = 'Determines the length of lookback period')
hp_period = input.int(defval = 48, title = 'High-Pass Period', group = 'Value', tooltip = 'Determines the High-Pass Period, default to 48')
overbought = input.float(defval = .7, title = 'Overbought Level', group = 'Value', tooltip = 'Determines the level of overbought area')
oversold = input.float(defval = .3, title = 'Oversold Level', group = 'Value', tooltip = 'Determines the level of oversold area')
src = input.source(defval = ohlc4, title = 'Source', group = 'Options', tooltip = 'Determines the source of input data, default to ohlc4')


// variable
alpha1 = 0.00
hp = 0.00
a1 = 0.00
b1 = 0.00
c1 = 0.00
c2 = 0.00
c3 = 0.00
filt = 0.00
highestc = 0.00
lowestc = 0.00
stoc = 0.00
mystochastic = 0.00

// high-pass filter cyclic components whose periods are shorter than 48 bars - High-Pass Period
pi = 2*math.asin(1)
alpha1 := (math.cos(.707*2*pi/48) + math.sin(.707*2*pi/48)-1)/math.cos(.707*2*pi/48)
hp := (1-alpha1/2)*(1-alpha1/2)*(src-2*src[1]+src[2])+2*(1-alpha1)*nz(hp[1])-(1-alpha1)*(1-alpha1)*nz(hp[2])

// smooth with a super smoother filter
a1 := math.exp(-1.414*pi/10)
b1 := 2*a1*math.cos(1.414*180/10)
c2 := b1
c3 := -a1*a1
c1 := 1-c2-c3
filt := c1*(hp+hp[1])/2+c2*nz(filt[1])+c3*nz(filt[2])

// stochastic cycle
highestc := filt
lowestc := filt

for i = 0 to length-1
    if filt[i] > highestc
        highestc := filt[i]
    if filt[i] < lowestc
        lowestc := filt[i]

stoc := (filt-lowestc)/(highestc-lowestc)
mystochastic := c1*(stoc+stoc[1])/2+c2*nz(mystochastic[1])+c3*nz(mystochastic[2])


// visualize
hline(overbought, color = color.new(color.blue, 50), linestyle = hline.style_dashed)
hline(oversold, color = color.new(color.blue, 50), linestyle = hline.style_dashed)
plot(mystochastic, color = color.maroon, linewidth = 3)


// create alert
alertcondition(mystochastic > overbought, title = 'Entry', message = 'Buy/Long entry detected')
alertcondition(mystochastic < oversold, title = 'Close', message = 'Sell/Short entry detected')
